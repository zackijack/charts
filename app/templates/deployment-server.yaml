{{- if and .Values.server.enabled -}}
{{- $name := .Release.Name -}}
{{- $fullName := include "server.name" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
  annotations:
    {{- if .Values.server.autoReload }}
    reloader.stakater.com/auto: "true"
    {{- end }}
    {{- with .Values.server.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.server.replicas }}
  selector:
    matchLabels:
      name: {{ $fullName }}
      env: {{ .Values.meta.env }}
  {{- with .Values.server.rollingUpdate }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .maxSurge }}
      maxUnavailable: {{ .maxUnavailable }}
  {{- end }}
  template:
    metadata:
      labels:
        name: {{ $fullName }}
        env: {{ .Values.meta.env }}
        version: {{ .Values.meta.version }}
        maintainer: {{ .Values.meta.maintainer }}
        managed-by: {{ .Release.Service }}
        helm-chart: {{ include "meta.chart" . }}
      annotations:
        prometheus.io/scrape: {{ .Values.server.prometheus.scrape | quote }}
        {{- if .Values.server.prometheus.scrape }}
        prometheus.io/path: {{ .Values.server.prometheus.path | quote }}
        {{- with .Values.server.prometheus.port }}
        prometheus.io/port: {{ . | quote }}
        {{- end }}
        {{- end }}
        sidecar.istio.io/inject: {{ .Values.server.istio.injected | quote }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $fullName }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.server.command }}
          command:
            {{- range . }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          {{- with .Values.server.args }}
          args:
            {{- range . }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.server.port }}
              protocol: TCP
            {{- if and .Values.server.prometheus.scrape .Values.server.prometheus.port }}
            - name: prometheus
              containerPort: {{ .Values.server.prometheus.port }}
              protocol: TCP
            {{- end }}
          {{- if .Values.server.liveness.enabled }}
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: {{ .Values.server.liveness.delay }}
            periodSeconds: {{ .Values.server.liveness.period }}
            timeoutSeconds: {{ .Values.server.liveness.timeout }}
            failureThreshold: {{ .Values.server.liveness.failure }}
          {{- end }}
          {{- if .Values.server.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.server.readiness.path }}
              port: http
            initialDelaySeconds: {{ .Values.server.readiness.delay }}
            periodSeconds: {{ .Values.server.readiness.period }}
            timeoutSeconds: {{ .Values.server.readiness.timeout }}
            successThreshold: {{ .Values.server.readiness.success }}
            failureThreshold: {{ .Values.server.readiness.failure }}
          {{- end }}
          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            {{- with .Values.server.env }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if .Values.configMap.enabled }}
          volumeMounts:
            - name: {{ $fullName }}
              mountPath: {{ .Values.configMap.mountPath }}
              {{- with .Values.configMap.subPath }}
              subPath: {{ . }}
              {{- end }}
              readOnly: {{ .Values.configMap.readOnly }}
          {{- end }}
      {{- if .Values.configMap.enabled }}
      volumes:
        - name: {{ $fullName }}
          configMap:
            name: {{ $name }}
      {{- end }}
      restartPolicy: {{ .Values.server.restartPolicy }}
      dnsPolicy: {{ .Values.server.dnsPolicy }}
      {{- with .Values.server.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
